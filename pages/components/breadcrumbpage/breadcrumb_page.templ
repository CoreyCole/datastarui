package breadcrumbpage

import (
	"github.com/coreycole/datastarui/components/breadcrumb"
	"github.com/coreycole/datastarui/components/card"
	"github.com/coreycole/datastarui/components/dropdown"
	l "github.com/coreycole/datastarui/layouts"
)

templ BreadcrumbPage() {
	@l.Root("components") {
		<div class="space-y-8">
			@l.ComponentPageBreadcrumbs("Breadcrumb")
			<!-- Page Header -->
			<div class="space-y-2">
				<h1 class="text-3xl font-bold tracking-tight">Breadcrumb</h1>
				<p class="text-lg text-muted-foreground">
					Displays the path to the current resource using a hierarchy of links.
				</p>
			</div>
			<!-- Component Grid -->
			<div class="grid gap-8">
				<!-- Basic Breadcrumb -->
				@card.Card(card.CardProps{}) {
					@card.CardHeader(card.CardHeaderProps{}) {
						@card.CardTitle(card.CardTitleProps{}) {
							Basic Breadcrumb
						}
						@card.CardDescription(card.CardDescriptionProps{}) {
							A simple breadcrumb with navigation links and current page.
						}
					}
					@card.CardContent(card.CardContentProps{}) {
						@breadcrumb.Breadcrumb(breadcrumb.BreadcrumbProps{}) {
							@breadcrumb.BreadcrumbList(breadcrumb.BreadcrumbListProps{}) {
								@breadcrumb.BreadcrumbItem(breadcrumb.BreadcrumbItemProps{}) {
									@breadcrumb.BreadcrumbLink(breadcrumb.BreadcrumbLinkProps{Href: "/"}) {
										Home
									}
								}
								@breadcrumb.BreadcrumbSeparator(breadcrumb.BreadcrumbSeparatorProps{})
								@breadcrumb.BreadcrumbItem(breadcrumb.BreadcrumbItemProps{}) {
									@breadcrumb.BreadcrumbLink(breadcrumb.BreadcrumbLinkProps{Href: "/components"}) {
										Components
									}
								}
								@breadcrumb.BreadcrumbSeparator(breadcrumb.BreadcrumbSeparatorProps{})
								@breadcrumb.BreadcrumbItem(breadcrumb.BreadcrumbItemProps{}) {
									@breadcrumb.BreadcrumbPage(breadcrumb.BreadcrumbPageProps{}) {
										Breadcrumb
									}
								}
							}
						}
					}
				}
				<!-- Breadcrumb with Ellipsis -->
				@card.Card(card.CardProps{}) {
					@card.CardHeader(card.CardHeaderProps{}) {
						@card.CardTitle(card.CardTitleProps{}) {
							With Ellipsis
						}
						@card.CardDescription(card.CardDescriptionProps{}) {
							Use ellipsis to indicate collapsed breadcrumb items.
						}
					}
					@card.CardContent(card.CardContentProps{}) {
						@breadcrumb.Breadcrumb(breadcrumb.BreadcrumbProps{}) {
							@breadcrumb.BreadcrumbList(breadcrumb.BreadcrumbListProps{}) {
								@breadcrumb.BreadcrumbItem(breadcrumb.BreadcrumbItemProps{}) {
									@breadcrumb.BreadcrumbLink(breadcrumb.BreadcrumbLinkProps{Href: "/"}) {
										Home
									}
								}
								@breadcrumb.BreadcrumbSeparator(breadcrumb.BreadcrumbSeparatorProps{})
								@breadcrumb.BreadcrumbItem(breadcrumb.BreadcrumbItemProps{}) {
									@breadcrumb.BreadcrumbEllipsis(breadcrumb.BreadcrumbEllipsisProps{})
								}
								@breadcrumb.BreadcrumbSeparator(breadcrumb.BreadcrumbSeparatorProps{})
								@breadcrumb.BreadcrumbItem(breadcrumb.BreadcrumbItemProps{}) {
									@breadcrumb.BreadcrumbLink(breadcrumb.BreadcrumbLinkProps{Href: "/components"}) {
										Components
									}
								}
								@breadcrumb.BreadcrumbSeparator(breadcrumb.BreadcrumbSeparatorProps{})
								@breadcrumb.BreadcrumbItem(breadcrumb.BreadcrumbItemProps{}) {
									@breadcrumb.BreadcrumbPage(breadcrumb.BreadcrumbPageProps{}) {
										Breadcrumb
									}
								}
							}
						}
					}
				}
				<!-- Breadcrumb with Dropdown -->
				@card.Card(card.CardProps{}) {
					@card.CardHeader(card.CardHeaderProps{}) {
						@card.CardTitle(card.CardTitleProps{}) {
							With Dropdown
						}
						@card.CardDescription(card.CardDescriptionProps{}) {
							Breadcrumb ellipsis that opens a dropdown menu with hidden items.
						}
					}
					@card.CardContent(card.CardContentProps{}) {
						{{
							dropdownID := "breadcrumb-dropdown"
						}}
						@breadcrumb.Breadcrumb(breadcrumb.BreadcrumbProps{}) {
							@breadcrumb.BreadcrumbList(breadcrumb.BreadcrumbListProps{}) {
								@breadcrumb.BreadcrumbItem(breadcrumb.BreadcrumbItemProps{}) {
									@breadcrumb.BreadcrumbLink(breadcrumb.BreadcrumbLinkProps{Href: "/"}) {
										Home
									}
								}
								@breadcrumb.BreadcrumbSeparator(breadcrumb.BreadcrumbSeparatorProps{})
								@breadcrumb.BreadcrumbItem(breadcrumb.BreadcrumbItemProps{}) {
									<div class="relative">
										@dropdown.DropdownMenu(dropdown.DropdownMenuProps{ID: dropdownID}) {
											@dropdown.DropdownMenuTrigger(dropdown.DropdownMenuTriggerProps{
												ID:    dropdownID,
												Class: "flex items-center gap-1",
											}) {
												@breadcrumb.BreadcrumbEllipsis(breadcrumb.BreadcrumbEllipsisProps{
													Class: "h-4 w-4",
												})
												<span class="sr-only">Toggle menu</span>
											}
											@dropdown.DropdownMenuContent(dropdown.DropdownMenuContentProps{
												ID:    dropdownID,
												Align: "start",
											}) {
												@dropdown.DropdownMenuItem(dropdown.DropdownMenuItemProps{
													ID: dropdownID,
												}) {
													Documentation
												}
												@dropdown.DropdownMenuItem(dropdown.DropdownMenuItemProps{
													ID: dropdownID,
												}) {
													Themes
												}
												@dropdown.DropdownMenuItem(dropdown.DropdownMenuItemProps{
													ID: dropdownID,
												}) {
													GitHub
												}
											}
										}
									</div>
								}
								@breadcrumb.BreadcrumbSeparator(breadcrumb.BreadcrumbSeparatorProps{})
								@breadcrumb.BreadcrumbItem(breadcrumb.BreadcrumbItemProps{}) {
									@breadcrumb.BreadcrumbLink(breadcrumb.BreadcrumbLinkProps{Href: "/components"}) {
										Components
									}
								}
								@breadcrumb.BreadcrumbSeparator(breadcrumb.BreadcrumbSeparatorProps{})
								@breadcrumb.BreadcrumbItem(breadcrumb.BreadcrumbItemProps{}) {
									@breadcrumb.BreadcrumbPage(breadcrumb.BreadcrumbPageProps{}) {
										Breadcrumb
									}
								}
							}
						}
					}
				}
				<!-- Custom Separator -->
				@card.Card(card.CardProps{}) {
					@card.CardHeader(card.CardHeaderProps{}) {
						@card.CardTitle(card.CardTitleProps{}) {
							Custom Separator
						}
						@card.CardDescription(card.CardDescriptionProps{}) {
							Override the default chevron separator with custom content.
						}
					}
					@card.CardContent(card.CardContentProps{}) {
						@breadcrumb.Breadcrumb(breadcrumb.BreadcrumbProps{}) {
							@breadcrumb.BreadcrumbList(breadcrumb.BreadcrumbListProps{}) {
								@breadcrumb.BreadcrumbItem(breadcrumb.BreadcrumbItemProps{}) {
									@breadcrumb.BreadcrumbLink(breadcrumb.BreadcrumbLinkProps{Href: "/"}) {
										Home
									}
								}
								@breadcrumb.BreadcrumbSeparator(breadcrumb.BreadcrumbSeparatorProps{CustomIcon: true}) {
									<span class="text-muted-foreground">/</span>
								}
								@breadcrumb.BreadcrumbItem(breadcrumb.BreadcrumbItemProps{}) {
									@breadcrumb.BreadcrumbLink(breadcrumb.BreadcrumbLinkProps{Href: "/components"}) {
										Components
									}
								}
								@breadcrumb.BreadcrumbSeparator(breadcrumb.BreadcrumbSeparatorProps{CustomIcon: true}) {
									<span class="text-muted-foreground">/</span>
								}
								@breadcrumb.BreadcrumbItem(breadcrumb.BreadcrumbItemProps{}) {
									@breadcrumb.BreadcrumbPage(breadcrumb.BreadcrumbPageProps{}) {
										Breadcrumb
									}
								}
							}
						}
					}
				}
			</div>
		</div>
	}
}
